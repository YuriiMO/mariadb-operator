---
- name: Verify cluster resources
  hosts: localhost
  connection: local

  vars:
    ansible_python_interpreter: '{{ ansible_playbook_python }}'

  tasks:
    - name: Get mariadb Pod data
      k8s_facts:
        kind: Pod
        namespace: example-mariadb
        label_selectors:
          - app=mariadb
      register: mariadb_pods

    - name: Verify there is one mariadb pod
      assert:
        that: '{{ (mariadb_pods.resources | length) == 1 }}'

    - name: Get mariadb Service data
      k8s_facts:
        kind: Service
        namespace: example-mariadb
        label_selectors:
          - app=mariadb
      register: mariadb_services

    - name: Set variable with mariadb service clusterIP
      set_fact:
        mariadb_service_ip: "{{ mariadb_services.resources[0].spec.clusterIP }}"

- name: Verify database functionality
  hosts: k8s

  vars:
    mariadb_db_host: "{{ hostvars['localhost']['mariadb_service_ip'] }}"
    mariadb_db_name: db
    mariadb_db_username: db_user
    mariadb_db_password: TODO

  pre_tasks:
    - name: Ensure pip is available.
      apk:
        name: py-pip
        state: present

    - name: Ensure PyMySQL is available.
      pip:
        name: PyMySQL
        state: present

  tasks:
    - name: Test database connection to mariadb Pod
      mysql_db:
        state: dump
        name: '{{ mariadb_db_name }}'
        target: '/tmp/{{ mariadb_db_name }}.sql'
        login_host: '{{ mariadb_db_host }}'
        login_user: '{{ mariadb_db_username }}'
        login_password: '{{ mariadb_db_password }}'
